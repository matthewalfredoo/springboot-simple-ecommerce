spring.application.name=search-service
server.port=8110

# Spring Kafka Consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=search-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# The Producer use com.learning.productservice.dto.ProductEvent as value serializer
# The Consumer use com.learning.searchservice.dto.ProductEvent as value deserializer
# So we need to tell the Consumer how to deserialize the value.
# Because, if not, the Consumer will try to deserialize the value using the same class as the Producer, and it will fail.
# https://stackoverflow.com/questions/76011607/kafka-consumer-fails-serialization-when-object-with-same-type-but-different-name
spring.kafka.consumer.properties.spring.json.type.mapping=com.learning.productservice.dto.ProductEvent:com.learning.searchservice.dto.ProductEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Spring Kafka Producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

kafka.topic.product=product_events
kafka.topic.api-response-json-cache=api_response_json_cache_events

eureka.client.service-url.default-zone=http://localhost:8761/eureka
